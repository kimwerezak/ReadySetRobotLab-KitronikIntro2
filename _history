{"entries":[{"timestamp":1744739418089,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// Zip LED's together to have all 4 lights change at the same time.\n// You can alter the the rgb values to change the color\nlet All_LED = Kitronik_Move_Motor.createMoveMotorZIPLED(4)\nAll_LED.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.rgb(255, 0, 255)))\nAll_LED.show()\nbasic.pause(1000)\n// To control each light seperately, we've created a variable name (ex. LED_0 for the LED labeled 0)\n// for each LED. Range will indicate which the Led you wish to control and how many subsequent\n// lights respectively.  This allows for grouping as well. Set to the color of your choice and show.\n// Changes LED 0 to purple.\nlet LED_0 = All_LED.range(0, 1)\nLED_0.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Purple))\nLED_0.show()\n// Changes LED 0 to red.\nlet LED_1 = All_LED.range(1, 1)\nLED_1.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Red))\nLED_1.show()\n// Changes LED 0 to blue.\nlet LED_2 = All_LED.range(2, 1)\nLED_2.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Blue))\nLED_2.show()\n// Changes LED 0 to green.\nlet LED_3 = All_LED.range(3, 1)\nLED_3.setColor(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.Green))\nLED_3.show()\n// if Kitronik_Move_Motor.measure() <n 15:\n//     Kitronik_Move_Motor.stop()\n//     Kitronik_Move_Motor.beep_horn()\n//     basic.pause(1000)\nbasic.forever(function Do_not_cut_me_off() {\n    Kitronik_Move_Motor.move(Kitronik_Move_Motor.DriveDirections.Forward, 20)\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1479,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\""],[0,"\n   "]],"start1":157,"start2":157,"length1":97,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":241,"start2":241,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"#Zip LED's together to have all 4 lights change at the same time.\n#You can alter the the rgb values to change the color\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.rgb(255, 0, 255)))\nAll_LED.show()\nbasic.pause(1000)\n\n#To control each light seperately, we've created a variable name (ex. LED_0 for the LED labeled 0)\n#for each LED. Range will indicate which the Led you wish to control and how many subsequent\n#lights respectively.  This allows for grouping as well. Set to the color of your choice and show.\n\n#Changes LED 0 to purple.\nLED_0 = All_LED.range(0, 1)\nLED_0.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.PURPLE))\nLED_0.show()\n\n#Changes LED 0 to red.\nLED_1 = All_LED.range(1, 1)\nLED_1.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\nLED_1.show()\n\n#Changes LED 0 to blue.\nLED_2 = All_LED.range(2, 1)\nLED_2.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLUE))\nLED_2.show()\n\n#Changes LED 0 to green.\nLED_3 = All_LED.range(3, 1)\nLED_3.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.GREEN))\nLED_3.show()\n\ndef Do_not_cut_me_off():\n    Kitronik_Move_Motor.move(Kitronik_Move_Motor.DriveDirections.FORWARD, 20)\n    #if Kitronik_Move_Motor.measure() <n 15:\n    #    Kitronik_Move_Motor.stop()\n    #    Kitronik_Move_Motor.beep_horn()\n    #    basic.pause(1000)\n\nbasic.forever(Do_not_cut_me_off)"}]},{"timestamp":1744739985110,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"():\n    "],[-1,"#"],[0,"Kitronik"]],"start1":1209,"start2":1209,"length1":17,"length2":16}]}]},{"timestamp":1744741501696,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"15:\n    "],[1,"#"],[0,"    Kitr"]],"start1":1333,"start2":1333,"length1":16,"length2":17}]}]},{"timestamp":1744741504830,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"w()\n"],[-1,"basic.forever(function Do_not_cut_me_off() {\n   "],[1,"//"],[0," if "],[-1,"("],[0,"Kitr"]],"start1":1208,"start2":1208,"length1":61,"length2":14},{"diffs":[[0,"() <"],[1,"n"],[0," 15"],[-1,") {\n   "],[1,":\n//"],[0,"    "]],"start1":1245,"start2":1245,"length1":18,"length2":16},{"diffs":[[0,".stop()\n"],[-1,"   "],[1,"//"],[0,"     Kit"]],"start1":1281,"start2":1281,"length1":19,"length2":18},{"diffs":[[0,"beep"],[-1,"H"],[1,"_h"],[0,"orn()\n"],[-1,"   "],[1,"//"],[0,"    "]],"start1":1316,"start2":1316,"length1":18,"length2":18},{"diffs":[[0,"use("],[-1,"3"],[1,"1"],[0,"000)\n"],[-1,"    } else {\n    "],[1,"basic.forever(function Do_not_cut_me_off() {\n"],[0,"    "]],"start1":1343,"start2":1343,"length1":31,"length2":59},{"diffs":[[0,"20)\n"],[-1,"    }\n    \n"],[0,"})\n"]],"start1":1472,"start2":1472,"length1":18,"length2":7}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"():\n"],[-1,"\n"],[0,"    "],[-1,"if "],[1,"#"],[0,"Kitr"]],"start1":1209,"start2":1209,"length1":16,"length2":13},{"diffs":[[0,"or.m"],[-1,"easure() < 15:\n        Kitronik_Move_Motor.stop("],[1,"ove(Kitronik_Move_Motor.DriveDirections.FORWARD, 20"],[0,")\n    "],[-1,"   "],[1,"#if"],[0," Kit"]],"start1":1235,"start2":1235,"length1":65,"length2":68},{"diffs":[[0,"tor."],[-1,"beep_horn()\n        basic.pause(3000)\n    else:"],[1,"measure() <n 15:\n       "],[0," Kit"]],"start1":1316,"start2":1316,"length1":55,"length2":32},{"diffs":[[0,"onik_Move_Motor."],[-1,"move("],[1,"stop()\n    #    "],[0,"Kitronik_Move_Mo"]],"start1":1349,"start2":1349,"length1":37,"length2":48},{"diffs":[[0,"tor."],[-1,"DriveDirections.FORWARD, 20)\n"],[1,"beep_horn()"],[0,"\n    "],[1,"#"],[0,"    "],[1,"basic.pause(1000)\n"],[0,"\nbas"]],"start1":1397,"start2":1397,"length1":46,"length2":47}]}]},{"timestamp":1744742088124,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_off():\n"],[1,"\n"],[0,"    if K"]],"start1":1205,"start2":1205,"length1":16,"length2":17}]}]},{"timestamp":1744743203497,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"show()\n\n"],[-1,"\n"],[0,"def Do_n"]],"start1":1180,"start2":1180,"length1":17,"length2":16}]}]},{"timestamp":1744743205628,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\";Z3N1=%h(PBpsNa%st`-\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"/aKMO0x4[rtDeF.kkHtB\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"w()\n"],[-1,"// The Robot will move forward until something is within 15cm of its distance sensor.\n// If something is in the way, it will stop, honk and resume moving in 3 seconds.\n"],[0,"basi"]],"start1":1208,"start2":1208,"length1":176,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"nikIntro"],[-1,"2"],[0,"\",\n    \""]],"start1":37,"start2":37,"length1":17,"length2":16},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":357,"start2":357,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"()\n\n"],[-1,"#The Robot will move forward until something is within 15cm of its distance sensor.\n#If something is in the way, it will stop, honk and resume moving in 3 seconds."],[0,"\ndef"]],"start1":1184,"start2":1184,"length1":171,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1744739418088,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"ReadySetRobotLab-KitronikIntro\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1744741501696,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"#Zip LED's together to have all 4 lights change at the same time.\n#You can alter the the rgb values to change the color\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.rgb(255, 0, 255)))\nAll_LED.show()\nbasic.pause(1000)\n\n#To control each light seperately, we've created a variable name (ex. LED_0 for the LED labeled 0)\n#for each LED. Range will indicate which the Led you wish to control and how many subsequent\n#lights respectively.  This allows for grouping as well. Set to the color of your choice and show.\n\n#Changes LED 0 to purple.\nLED_0 = All_LED.range(0, 1)\nLED_0.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.PURPLE))\nLED_0.show()\n\n#Changes LED 0 to red.\nLED_1 = All_LED.range(1, 1)\nLED_1.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\nLED_1.show()\n\n#Changes LED 0 to blue.\nLED_2 = All_LED.range(2, 1)\nLED_2.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLUE))\nLED_2.show()\n\n#Changes LED 0 to green.\nLED_3 = All_LED.range(3, 1)\nLED_3.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.GREEN))\nLED_3.show()\n\ndef Do_not_cut_me_off():\n    Kitronik_Move_Motor.move(Kitronik_Move_Motor.DriveDirections.FORWARD, 20)\n    #if Kitronik_Move_Motor.measure() <n 15:\n    #    Kitronik_Move_Motor.stop()\n    #    Kitronik_Move_Motor.beep_horn()\n    #    basic.pause(1000)\n\nbasic.forever(Do_not_cut_me_off)","pxt.json":"{\n    \"name\": \"ReadySetRobotLab-KitronikIntro\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1744743303891,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"#Zip LED's together to have all 4 lights change at the same time.\n#You can alter the the rgb values to change the color\nAll_LED = Kitronik_Move_Motor.create_move_motor_zipled(4)\nAll_LED.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.rgb(255, 0, 255)))\nAll_LED.show()\nbasic.pause(1000)\n\n#To control each light seperately, we've created a variable name (ex. LED_0 for the LED labeled 0)\n#for each LED. Range will indicate which the Led you wish to control and how many subsequent\n#lights respectively.  This allows for grouping as well. Set to the color of your choice and show.\n\n#Changes LED 0 to purple.\nLED_0 = All_LED.range(0, 1)\nLED_0.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.PURPLE))\nLED_0.show()\n\n#Changes LED 0 to red.\nLED_1 = All_LED.range(1, 1)\nLED_1.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.RED))\nLED_1.show()\n\n#Changes LED 0 to blue.\nLED_2 = All_LED.range(2, 1)\nLED_2.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.BLUE))\nLED_2.show()\n\n#Changes LED 0 to green.\nLED_3 = All_LED.range(3, 1)\nLED_3.set_color(Kitronik_Move_Motor.colors(Kitronik_Move_Motor.ZipLedColors.GREEN))\nLED_3.show()\n\n#The Robot will move forward until something \ndef Do_not_cut_me_off():\n    if Kitronik_Move_Motor.measure() < 15:\n        Kitronik_Move_Motor.stop()\n        Kitronik_Move_Motor.beep_horn()\n        basic.pause(3000)\n    else: Kitronik_Move_Motor.move(Kitronik_Move_Motor.DriveDirections.FORWARD, 20)\n\n        \nbasic.forever(Do_not_cut_me_off)","pxt.json":"{\n    \"name\": \"ReadySetRobotLab-KitronikIntro\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-kitronik-move-motor\": \"github:kitronikltd/pxt-kitronik-move-motor#v0.4.20\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1744743694669}